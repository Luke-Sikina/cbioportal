<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.cbioportal.persistence.mybatis.TreatmentMapper">
    <select id="getEventTimeline" resultType="org.cbioportal.model.GroupedClinicalEvent">
        SELECT
            patient.STABLE_ID as patientId,
            clinical_event_data.VALUE as event,
            clinical_event.START_DATE as start,
            ifnull(clinical_event.STOP_DATE, clinical_event.START_DATE) as stop
        FROM
            clinical_event
            INNER JOIN clinical_event_data ON clinical_event.CLINICAL_EVENT_ID = clinical_event_data.CLINICAL_EVENT_ID
            INNER JOIN patient ON clinical_event.PATIENT_ID = patient.INTERNAL_ID
            INNER JOIN cancer_study ON patient.CANCER_STUDY_ID = cancer_study.CANCER_STUDY_ID
            <!--This can be switched to an INNER JOIN once this is using decent data (pre merge)-->
            LEFT JOIN (
                select GROUP_CONCAT(distinct sample.STABLE_ID) as sampleIds, patient.INTERNAL_ID
                from patient inner join sample on patient.INTERNAL_ID = sample.PATIENT_ID
                group by patient.INTERNAL_ID
            ) as p_samples ON p_samples.INTERNAL_ID = patient.INTERNAL_ID

        WHERE
            cancer_study.CANCER_STUDY_IDENTIFIER IN
            <foreach item="studyId" collection="studyIds" open="(" separator="," close=")">
                #{studyId}
            </foreach>
            AND
            clinical_event_data.KEY='AGENT' AND
            clinical_event_data.VALUE IN
            <foreach item="eventValue" collection="eventValues" open="(" separator="," close=")">
                #{eventValue}
            </foreach>
    </select>

    <select id="getEventTimeline" resultType="org.cbioportal.model.GroupedClinicalEvent">
        SELECT
            patient.STABLE_ID as patientId,
            clinical_event_data.VALUE as event,
            clinical_event.START_DATE as start,
            ifnull(clinical_event.STOP_DATE, clinical_event.START_DATE) as stop
        FROM
            clinical_event
            INNER JOIN clinical_event_data ON clinical_event.CLINICAL_EVENT_ID = clinical_event_data.CLINICAL_EVENT_ID
            INNER JOIN patient ON clinical_event.PATIENT_ID = patient.INTERNAL_ID
            INNER JOIN study_view_filter_cache ON 
            <!--This can be switched to an INNER JOIN once this is using decent data (pre merge)-->
            LEFT JOIN (
                select GROUP_CONCAT(distinct sample.STABLE_ID) as sampleIds, patient.INTERNAL_ID
                from patient inner join sample on patient.INTERNAL_ID = sample.PATIENT_ID
                group by patient.INTERNAL_ID
            ) as p_samples ON p_samples.INTERNAL_ID = patient.INTERNAL_ID

        WHERE
            cancer_study.CANCER_STUDY_IDENTIFIER IN
        <foreach item="studyId" collection="studyIds" open="(" separator="," close=")">
            #{studyId}
        </foreach>
        AND
        clinical_event_data.KEY='AGENT' AND
        clinical_event_data.VALUE IN
        <foreach item="eventValue" collection="eventValues" open="(" separator="," close=")">
            #{eventValue}
        </foreach>
    </select>
    
    <select id="getAllTreatments" resultType="org.cbioportal.model.Treatment">
        SELECT
            clinical_event_data.VALUE as treatment,
            patient.STABLE_ID as patientId,
            cancer_study.CANCER_STUDY_IDENTIFIER as studyId,
            clinical_event.START_DATE as start,
            clinical_event.STOP_DATE as stop
        FROM
            clinical_event
            INNER JOIN clinical_event_data ON clinical_event.CLINICAL_EVENT_ID = clinical_event_data.CLINICAL_EVENT_ID
            INNER JOIN patient ON clinical_event.PATIENT_ID = patient.INTERNAL_ID
            INNER JOIN sample ON patient.INTERNAL_ID = sample.PATIENT_ID
            INNER JOIN cancer_study ON patient.CANCER_STUDY_ID = cancer_study.CANCER_STUDY_ID
        <include refid="where"/>
            AND clinical_event_data.KEY = 'AGENT'
    </select>

    <select id="getAllSamples" resultType="org.cbioportal.model.ClinicalEventSample">
        SELECT
            sample.STABLE_ID as sampleId,
            patient.STABLE_ID as patientId,
            cancer_study.CANCER_STUDY_IDENTIFIER as studyId,
            clinical_event.START_DATE as timeTaken
        FROM
            clinical_event
            INNER JOIN clinical_event_data ON clinical_event.CLINICAL_EVENT_ID = clinical_event_data.CLINICAL_EVENT_ID
            INNER JOIN patient ON clinical_event.PATIENT_ID = patient.INTERNAL_ID
            INNER JOIN sample ON clinical_event_data.VALUE = sample.STABLE_ID
            INNER JOIN cancer_study ON patient.CANCER_STUDY_ID = cancer_study.CANCER_STUDY_ID
        <include refid="where"/>
            AND clinical_event_data.KEY = 'SAMPLE_ID'
    </select>

    <select id="getAllShallowSamples" resultType="org.cbioportal.model.ClinicalEventSample">
        SELECT
            sample.STABLE_ID as sampleId,
            patient.STABLE_ID as patientId,
            cancer_study.CANCER_STUDY_IDENTIFIER as studyId
        FROM
            sample
            INNER JOIN patient ON sample.PATIENT_ID = patient.INTERNAL_ID
            INNER JOIN cancer_study ON patient.CANCER_STUDY_ID = cancer_study.CANCER_STUDY_ID
        <include refid="where"/>
    </select>

    <select id="getAllUniqueTreatments" resultType="java.lang.String">
        SELECT 
            DISTINCT clinical_event_data.VALUE
        FROM
            clinical_event
            INNER JOIN clinical_event_data ON clinical_event.CLINICAL_EVENT_ID = clinical_event_data.CLINICAL_EVENT_ID
            INNER JOIN patient ON clinical_event.PATIENT_ID = patient.INTERNAL_ID
            INNER JOIN sample ON patient.INTERNAL_ID = sample.PATIENT_ID
            INNER JOIN cancer_study ON patient.CANCER_STUDY_ID = cancer_study.CANCER_STUDY_ID
        <include refid="where"/>
            AND clinical_event_data.KEY = 'AGENT'
    </select>

    <select id="getTreatmentCount" resultType="java.lang.Integer">
        SELECT
            COUNT(clinical_event.PATIENT_ID)
        FROM
            clinical_event
            INNER JOIN clinical_event_data ON clinical_event.CLINICAL_EVENT_ID = clinical_event_data.CLINICAL_EVENT_ID
            INNER JOIN patient ON clinical_event.PATIENT_ID = patient.INTERNAL_ID
            INNER JOIN sample ON patient.INTERNAL_ID = sample.PATIENT_ID
            INNER JOIN cancer_study ON patient.CANCER_STUDY_ID = cancer_study.CANCER_STUDY_ID
        <include refid="where"/>
            AND clinical_event_data.KEY = 'AGENT'
    </select>

    <select id="getSampleCount" resultType="java.lang.Integer">
        SELECT
            COUNT(sample.STABLE_ID)
        FROM
            clinical_event
            INNER JOIN clinical_event_data ON clinical_event.CLINICAL_EVENT_ID = clinical_event_data.CLINICAL_EVENT_ID
            INNER JOIN patient ON clinical_event.PATIENT_ID = patient.INTERNAL_ID
            INNER JOIN sample ON patient.INTERNAL_ID = sample.PATIENT_ID
            INNER JOIN cancer_study ON patient.CANCER_STUDY_ID = cancer_study.CANCER_STUDY_ID
        <include refid="where"/>
            AND clinical_event_data.KEY = 'SAMPLE_ID'
    </select>
    

    <sql id="where">
        <where>
            <if test="sampleIds == null and studyIds != null">
                cancer_study.CANCER_STUDY_IDENTIFIER IN
                <if test="studyIds.isEmpty()">
                    (NULL)
                </if>
                <if test="!studyIds.isEmpty()">
                    <foreach item="item" collection="studyIds" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
            </if>
            <if test="sampleIds != null">
                <if test="@java.util.Arrays@stream(studyIds.toArray()).distinct().count() == 1">
                    cancer_study.CANCER_STUDY_IDENTIFIER = #{studyIds[0]} AND
                    sample.STABLE_ID IN
                    <foreach item="item" collection="sampleIds" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                <if test="@java.util.Arrays@stream(studyIds.toArray()).distinct().count() > 1">
                    cancer_study.CANCER_STUDY_IDENTIFIER IN
                        <foreach item="item" collection="@java.util.Arrays@stream(studyIds.toArray()).distinct().collect(@java.util.stream.Collectors@toList())" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                    AND (cancer_study.CANCER_STUDY_IDENTIFIER, sample.STABLE_ID) IN
                    <foreach index="i" collection="sampleIds" open="(" separator="," close=")">
                        (#{studyIds[${i}]}, #{sampleIds[${i}]})
                    </foreach>
                </if>
            </if>
        </where>
    </sql>
</mapper>